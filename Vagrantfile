# -*- mode: ruby -*-
# vi: set ft=ruby :

############################################################################################################################################
# Deploying 10 VM with Vagrant : 1 proxy, 1 reverse proxy, 3 web servers (wordpress), 2 file servers, a database server and two log server #
# This script uses a folder called cert placed aside this file, which contains all the files generated by Let's Encrypt for HTTPS serving  #
#                                                      Author: Axel Floquet-Trillot                                                        #
############################################################################################################################################

Vagrant.configure("2") do |config|
  # Checking, and maybe installing vagrant-env plugin if it is not present to retrieve passwords from .env file
  puts "Installing missing plugin vagrant-env..."
  config.vagrant.plugins = "vagrant-env"

  # Check updates and use use Ubuntu 18.04 image from Hashicorp
  config.vm.box = "hashicorp/bionic64"
  config.vm.box_check_update = true

  # Use the .env file to load passwords
  config.env.enable
  config.vagrant.sensitive = [ENV['HAPROXY_STATS_PASSWORD'], ENV['DB_ROOT_PASSWORD'], ENV['DB_USER_PASSWORD'], ENV['WP_ADMIN_PASSWORD']]

  # Define all variables here in a flat hash (nested hash cannot be used easily in provision)
  # All params are transmitted to scripts with environment variables
  vm_params = {
    # Network configuration
    :range_ip_base           => "192.168.43.",                      # Cannot be wider than a 255.255.255.0 network (scripts won't work)
    :netmask                 => "255.255.255.0",                    # Cannot be wider that a 255.255.255.0 network (scripts won't work)
    :bridgeif                => "wlp2s0",                           # Name of the interface to bridge. Command "VBoxManage list bridgedifs" is used to obtain the correct name
    :bridgeif_guest_name     => "eth1",                             # Name of the bridged interface in the guest. Mostly used for firewall configuration

    # Proxy
    :squid_hostname          => "wp-proxy",                         # Hostname for the squid proxy server
    :squid_ip                => "192.168.43.10",                    # IP for the squid proxy server. Must be the first of the project.

    # Reverse proxy and load balancer
    :haproxy_hostname        => "wp-lb",                            # Hostname for the load balancer server
    :haproxy_ip              => "192.168.43.11",                    # IP for the load balancer server
    :haproxy_stats_user      => "admin",                            # Username to access the stats of HAProxy on the 1936 port (not open to eth0 nor eth1 by default)
    :haproxy_stats_password  => ENV['HAPROXY_STATS_PASSWORD'],      # Password to access the stats of HAProxy on the 1936 port (not open to eth0 nor eth1 by default)

    # Database
    :mariadb_hostname        => "wp-db",                            # Hostname for the database server
    :mariadb_ip              => "192.168.43.12",                    # IP for the database server
    :database_name           => "wordpress",                        # Defines the WordPress database name. It will only be used for the WordPress website. It uses utf8mb4 charset to support all types of characters including emojis.
    :database_username       => "wordpressuser",                    # Defines the WordPress database user. It will be only allowed to connect from web servers and have all privileges on the WordPress website database.
    :database_root_password  => ENV['DB_ROOT_PASSWORD'],            # Defines the root password for the mariadb database, which have all privileges on all the databases on the server. Root is only allowed to log in locally.
    :database_user_password  => ENV['DB_USER_PASSWORD'],            # Defines the WordPress application user password. It has all privileges only to the WordPress database, isolatingnit from the other ones if any.

    # File servers
    :glusterfs_hostname_base => "wp-file",                          # Sets the base of hostname for the file servers with GlusterFS, sequence number will be added
    :glusterfs_ip_start      => 13,                                 # Sets start of range of GlusterFS servers (for example, range 13 to 14 will give 2 servers with the default : 192.168.43.13 and 192.168.43.14)
    :glusterfs_ip_end        => 14,                                 # Sets end of range of GlusterFS servers. It will be used to configure the storage cluster. It must also be at least equal to the start of the range (1 VM)
    :glusterfs_root          => "/data",                            # Defines the root of the GlusterFS volumes on the file servers. Folder will be created at config time for 2 bricks by server.
    
    # Web servers
    :nginx_hostname_base     => "wp-web-n",                         # Sets the base of hostname for the nginx web servers, sequence number will be added
    :nginx_ip_start          => 15,                                 # Sets start of range of nginx servers. It must be the first IP of the web servers (for GlusterFS rules)
    :nginx_ip_end            => 16,                                 # Sets end of range of nginx servers. It must be at least equal to the start of the range (1 VM)
    :apache_hostname_base    => "wp-web-a",                         # Sets the base of hostname for the apache web servers, sequence number will be added
    :apache_ip_start         => 17,                                 # Sets start of range of apache servers (for example, range 17 to 17 will only provision one server with 192.168.43.17)
    :apache_ip_end           => 17,                                 # Sets end of range of apache servers. It must be at least equal to the start of the range (1 VM). Must also be the last IP of the project
    :https_enabled           => true,                               # Uses HTTPS to serve website. A valid certificate is required in cert folder. Can be disabled if no cert present.
    :domain_name             => "opensource.axelfloquet.fr",        # Name of the domain used for the website. Must match the name of the certificate to prevent warnings in browser. Must be set in /etc/hosts or %WINDIR%\System32\drivers\etc\hosts to redirect to correct IP (the HAProxy machine)
    :cert_root               => "/vagrant/cert",                    # Should not be modified. Path of the cert within the guest OS. It is used to configure the vhosts to use HTTPS. For simplicity, it is kept in a shared folder with the host and the other machines.
    :web_root                => "/var/www/html",                    # This is the folder used to mount the website files volume with GlusterFS

    # Centralized log server
    :rsyslog_hostname        => "wp-log",                           # Hostname for the centralized log server (rsyslog and filebeat)
    :rsyslog_ip              => "192.168.43.18",                    # IP for the centralized log server (rsyslog and filebeat)
    :elk_hostname            => "wp-elk",                           # Hostname for the centralized log server (ELK stack)
    :elk_ip                  => "192.168.43.19",                    # IP for the centralized log server (ELK stack)
    :kibana_domain_name      => "kibana.opensource.axelfloquet.fr", # Domain name for kibana, set in HAProxy

    # WordPress configuration
    :website_prefix          => "os1_",                             # Sets the prefix used for all the tables in the database
    # Leave all the parameters below empty for GUI install.
    :website_name            => "Open Source Exo 4",                # Sets the website name.
    :website_username        => "admin",                            # Sets the website username. It will be the admin user
    :website_password        => ENV['WP_ADMIN_PASSWORD'],           # Sets the admin password. Make sure to use a strong password
    :website_email           => "contact@opensource.fr",            # Sets the email address linked to the admin account
    :noindex                 => 0,                                   # Defines if the website should be indexed by the search engines. 0 = do not index website. 1 = show website in search resulsts.

    # Centreon server
    :centreon_hostname       => "wp-centreon",
    :centreon_ip             => "192.168.43.21",
    :centreon_root           => "/"
  }

  config.vm.define vm_params[:centreon_hostname] do |cent|
    cent.vm.hostname = vm_params[:centreon_hostname]
    cent.vm.network :public_network, bridge: vm_params[:bridgedif], ip: vm_params[:centreon_ip], netmask: vm_params[:netmask]

    cent.vm.provider :virtualbox do |vb|
      vb.cpus = 1
      vb.memory = 1024
    end

    cent.vm.provision :shell, :path => "common/sethosts.sh",          :args => [vm_params[:centreon_hostname], 11],                    :name => "Set hosts"
    cent.vm.provision :shell, :path => "common/setproxy.sh",          :args => [vm_params[:squid_hostname], 22],                       :name => "Set system proxy"
    cent.vm.provision :shell, :path => "common/apt.sh",               :args => ["build-essential cmake pkg-config libperl-dev libssh2-1-dev libgcrypt-dev libcgsi-gsoap-dev zlib1g-dev libssl-dev libxerces-c-dev libgnutls28-dev libssl-dev libkrb5-dev libldap2-dev libsnmp-dev gawk libwrap0-dev libmcrypt-dev smbclient fping gettext dnsutils libmodule-build-perl libmodule-install-perl libnet-snmp-perl libxml-libxml-perl libjson-perl libwww-perl libxml-xpath-perl libnet-telnet-perl libnet-ntp-perl libnet-dns-perl libdbi-perl libdbd-mysql-perl libdbd-pg-perl libdatetime-perl librrd-dev libqt4-dev libqt4-sql-mysql libgnutls28-dev lsb-release liblua5.2-dev liburi-encode-perl libdate-manip-perl snmp snmpd snmptrapd libnet-snmp-perl libsnmp-perl snmp-mibs-downloader", 44], :name => "APT operations (General)"
    cent.vm.provision :shell, :path => "centreon/install.sh"
  end
